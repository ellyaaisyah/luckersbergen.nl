{"version":3,"file":"static/webpack/static/development/pages/projects/user-testing.js.8958a34b4d5ad8b3e16f.hot-update.js","sources":["webpack:///./pages/projects/user-testing.js"],"sourcesContent":["import React from \"react\";\nimport Layout from \"../../components/layout\";\n\nconst MultiAppSubscription = () => {\n  return (\n    <Layout>\n      <div className=\"bg-light-grey\">\n        <div className=\"container pt-5 pb-5 text-center\">\n          <h1 className=\"text-uppercase font-weight-bold m-0\">User Testing</h1>\n        </div>\n      </div>\n      <div className=\"hero\">\n        <img\n          src=\"/usertestingpage-heroimage.jpg\"\n          alt=\"User Testing\"\n          className=\"w-100\"\n        />\n      </div>\n      <div className=\"container container-smaller pt-5 pb-5\">\n        <h2 className=\"text-uppercase font-weight-bold\">The Project</h2>\n        <p>\n          As a UX designer, I believe it is important to talk to your audience.\n          Therefore I’ve been part of GameHouse’s User Testing team. Conducting\n          interviews, running play tests and giving presentations has been an\n          important source of inspiration and feedback for my projects.\n        </p>\n\n        <ul className=\"tag-clouds pt-4 pb-4\">\n          <li>Subscription</li>\n          <li>E-Commerce</li>\n          <li>UX Design</li>\n          <li>UI Design</li>\n          <li>Mobile</li>\n          <li>Scrum</li>\n          <li>A/B-Testing</li>\n          <li>Sketch</li>\n          <li>Trigger-Points</li>\n        </ul>\n\n        <h2 className=\"text-uppercase font-weight-bold\">My Contributions</h2>\n        <p>\n          When I joined this project, my biggest challenge was to get the user\n          to understand the subscription. Technically it was all set up, but\n          communication with the user needed a lot of work still.\n        </p>\n        <p>\n          First I worked on the communication at paywalls and for in-app\n          purchase billing. I’ve designed and AB-tested new paywalls to optimize\n          the user’s understanding of the existence of multiple games similar to\n          their liking.\n        </p>\n        <p>\n          At that point the ‘happy scenario’ up and running, but what if\n          something would go wrong? I started creating screens to inform the\n          user if their status was in grace or when their subscription got\n          suspended or cancelled due to payment issues.\n        </p>\n        <p>\n          With the basic flow correctly working, I moved on to creating special\n          offers. With some help, I was able to show a unique offer to every\n          user that had purchased any of our games in the last 3 months. I set\n          up a 30-day subscription trial so that every player that had once\n          bought one of our games could experience the entire catalog for free.\n        </p>\n      </div>\n      <div className=\"container pb-5\">\n        <div className=\"row\">\n          <div className=\"col-12 col-md-6 mb-4\">\n            <img\n              src=\"/usertestingpage-item1.jpg\"\n              alt=\"User Testing\"\n              className=\"w-100\"\n            />\n          </div>\n          <div className=\"col-12 col-md-6 mb-4\">\n            <img\n              src=\"/usertestingpage-item2.jpg\"\n              alt=\"User Testing\"\n              className=\"w-100\"\n            />\n          </div>\n          <div className=\"col-12 col-md-6 mb-4\">\n            <img\n              src=\"/usertestingpage-item3.jpg\"\n              alt=\"User Testing\"\n              className=\"w-100\"\n            />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default MultiAppSubscription;\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;;;;A","sourceRoot":""}